/* tslint:disable */
/* eslint-disable */
/**
 * Manatee API
 * Candidate application management API codenamed \"Manatee\" is a mockup of a real system, where recruiters can view new applications and follow a process until successful onboarding.   
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApplicationState } from './ApplicationState';
import {
    ApplicationStateFromJSON,
    ApplicationStateFromJSONTyped,
    ApplicationStateToJSON,
} from './ApplicationState';
import type { Candidate } from './Candidate';
import {
    CandidateFromJSON,
    CandidateFromJSONTyped,
    CandidateToJSON,
} from './Candidate';
import type { Interview } from './Interview';
import {
    InterviewFromJSON,
    InterviewFromJSONTyped,
    InterviewToJSON,
} from './Interview';

/**
 * 
 * @export
 * @interface Application
 */
export interface Application {
    /**
     * 
     * @type {number}
     * @memberof Application
     */
    id?: number;
    /**
     * 
     * @type {ApplicationState}
     * @memberof Application
     */
    applicationState?: ApplicationState;
    /**
     * 
     * @type {Candidate}
     * @memberof Application
     */
    candidate: Candidate;
    /**
     * 
     * @type {Array<Interview>}
     * @memberof Application
     */
    interviews?: Array<Interview>;
    /**
     * 
     * @type {Date}
     * @memberof Application
     */
    updatedOn?: Date;
}

/**
 * Check if a given object implements the Application interface.
 */
export function instanceOfApplication(value: object): boolean {
    if (!('candidate' in value)) return false;
    return true;
}

export function ApplicationFromJSON(json: any): Application {
    return ApplicationFromJSONTyped(json, false);
}

export function ApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Application {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'applicationState': json['applicationState'] == null ? undefined : ApplicationStateFromJSON(json['applicationState']),
        'candidate': CandidateFromJSON(json['candidate']),
        'interviews': json['interviews'] == null ? undefined : ((json['interviews'] as Array<any>).map(InterviewFromJSON)),
        'updatedOn': json['updatedOn'] == null ? undefined : (new Date(json['updatedOn'])),
    };
}

export function ApplicationToJSON(value?: Application | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'applicationState': ApplicationStateToJSON(value['applicationState']),
        'candidate': CandidateToJSON(value['candidate']),
        'interviews': value['interviews'] == null ? undefined : ((value['interviews'] as Array<any>).map(InterviewToJSON)),
        'updatedOn': value['updatedOn'] == null ? undefined : ((value['updatedOn']).toISOString()),
    };
}

