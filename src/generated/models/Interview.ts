/* tslint:disable */
/* eslint-disable */
/**
 * Manatee API
 * Candidate application management API codenamed \"Manatee\" is a mockup of a real system, where recruiters can view new applications and follow a process until successful onboarding.   
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InterviewType } from './InterviewType';
import {
    InterviewTypeFromJSON,
    InterviewTypeFromJSONTyped,
    InterviewTypeToJSON,
} from './InterviewType';

/**
 * 
 * @export
 * @interface Interview
 */
export interface Interview {
    /**
     * 
     * @type {number}
     * @memberof Interview
     */
    id?: number;
    /**
     * 
     * @type {InterviewType}
     * @memberof Interview
     */
    interviewType?: InterviewType;
    /**
     * 
     * @type {Date}
     * @memberof Interview
     */
    interviewTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof Interview
     */
    interviewerName?: string;
}

/**
 * Check if a given object implements the Interview interface.
 */
export function instanceOfInterview(value: object): boolean {
    return true;
}

export function InterviewFromJSON(json: any): Interview {
    return InterviewFromJSONTyped(json, false);
}

export function InterviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): Interview {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'interviewType': json['InterviewType'] == null ? undefined : InterviewTypeFromJSON(json['InterviewType']),
        'interviewTime': json['interviewTime'] == null ? undefined : (new Date(json['interviewTime'])),
        'interviewerName': json['interviewerName'] == null ? undefined : json['interviewerName'],
    };
}

export function InterviewToJSON(value?: Interview | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'InterviewType': InterviewTypeToJSON(value['interviewType']),
        'interviewTime': value['interviewTime'] == null ? undefined : ((value['interviewTime']).toISOString()),
        'interviewerName': value['interviewerName'],
    };
}

